name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Only deploy if CI passed (when triggered by workflow_run)
  check-ci:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.deploy }}
    steps:
      - name: Check CI status
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            if [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
              echo "deploy=true" >> $GITHUB_OUTPUT
            else
              echo "CI failed, skipping deployment"
              echo "deploy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "deploy=true" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-ci
    if: needs.check-ci.outputs.should-deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/package.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/package.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Run tests before deployment
        run: npm test

      - name: Build with Next.js
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_BUILD_ID: ${{ github.sha }}
          NEXT_PUBLIC_BUILD_TIME: ${{ github.event.head_commit.timestamp }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
